{"ast":null,"code":"var _jsxFileName = \"/Users/venkatkutti/heckathon/healthsync/healthsync/frontend/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { auth } from '../config/supabase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Get initial user\n    const getInitialUser = async () => {\n      try {\n        const currentUser = await auth.getCurrentUser();\n        setUser(currentUser);\n      } catch (error) {\n        console.error('Error getting initial user:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getInitialUser();\n\n    // Listen for auth state changes\n    const {\n      data: {\n        subscription\n      }\n    } = auth.onAuthStateChange((event, session) => {\n      var _session$user;\n      setUser((_session$user = session === null || session === void 0 ? void 0 : session.user) !== null && _session$user !== void 0 ? _session$user : null);\n      setLoading(false);\n    });\n    return () => subscription.unsubscribe();\n  }, []);\n  const signIn = async (email, password) => {\n    const {\n      data,\n      error\n    } = await auth.signIn(email, password);\n    if (error) throw error;\n    return data;\n  };\n  const signUp = async (email, password) => {\n    const {\n      data,\n      error\n    } = await auth.signUp(email, password);\n    if (error) throw error;\n    return data;\n  };\n  const signOut = async () => {\n    const {\n      error\n    } = await auth.signOut();\n    if (error) throw error;\n  };\n  const resetPassword = async email => {\n    const {\n      data,\n      error\n    } = await auth.resetPassword(email);\n    if (error) throw error;\n    return data;\n  };\n  const updatePassword = async password => {\n    const {\n      data,\n      error\n    } = await auth.updatePassword(password);\n    if (error) throw error;\n    return data;\n  };\n  const value = {\n    user,\n    loading,\n    signIn,\n    signUp,\n    signOut,\n    resetPassword,\n    updatePassword\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","auth","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","getInitialUser","currentUser","getCurrentUser","error","console","data","subscription","onAuthStateChange","event","session","_session$user","unsubscribe","signIn","email","password","signUp","signOut","resetPassword","updatePassword","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/venkatkutti/heckathon/healthsync/healthsync/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { auth } from '../config/supabase';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Get initial user\n    const getInitialUser = async () => {\n      try {\n        const currentUser = await auth.getCurrentUser();\n        setUser(currentUser);\n      } catch (error) {\n        console.error('Error getting initial user:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getInitialUser();\n\n    // Listen for auth state changes\n    const { data: { subscription } } = auth.onAuthStateChange((event, session) => {\n      setUser(session?.user ?? null);\n      setLoading(false);\n    });\n\n    return () => subscription.unsubscribe();\n  }, []);\n\n  const signIn = async (email, password) => {\n    const { data, error } = await auth.signIn(email, password);\n    if (error) throw error;\n    return data;\n  };\n\n  const signUp = async (email, password) => {\n    const { data, error } = await auth.signUp(email, password);\n    if (error) throw error;\n    return data;\n  };\n\n  const signOut = async () => {\n    const { error } = await auth.signOut();\n    if (error) throw error;\n  };\n\n  const resetPassword = async (email) => {\n    const { data, error } = await auth.resetPassword(email);\n    if (error) throw error;\n    return data;\n  };\n\n  const updatePassword = async (password) => {\n    const { data, error } = await auth.updatePassword(password);\n    if (error) throw error;\n    return data;\n  };\n\n  const value = {\n    user,\n    loading,\n    signIn,\n    signUp,\n    signOut,\n    resetPassword,\n    updatePassword,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,IAAI,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMQ,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGT,UAAU,CAACM,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAQpB,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMgB,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,WAAW,GAAG,MAAMhB,IAAI,CAACiB,cAAc,CAAC,CAAC;QAC/CL,OAAO,CAACI,WAAW,CAAC;MACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD,CAAC,SAAS;QACRJ,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,cAAc,CAAC,CAAC;;IAEhB;IACA,MAAM;MAAEK,IAAI,EAAE;QAAEC;MAAa;IAAE,CAAC,GAAGrB,IAAI,CAACsB,iBAAiB,CAAC,CAACC,KAAK,EAAEC,OAAO,KAAK;MAAA,IAAAC,aAAA;MAC5Eb,OAAO,EAAAa,aAAA,GAACD,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEb,IAAI,cAAAc,aAAA,cAAAA,aAAA,GAAI,IAAI,CAAC;MAC9BX,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;IAEF,OAAO,MAAMO,YAAY,CAACK,WAAW,CAAC,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,MAAM,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACxC,MAAM;MAAET,IAAI;MAAEF;IAAM,CAAC,GAAG,MAAMlB,IAAI,CAAC2B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC;IAC1D,IAAIX,KAAK,EAAE,MAAMA,KAAK;IACtB,OAAOE,IAAI;EACb,CAAC;EAED,MAAMU,MAAM,GAAG,MAAAA,CAAOF,KAAK,EAAEC,QAAQ,KAAK;IACxC,MAAM;MAAET,IAAI;MAAEF;IAAM,CAAC,GAAG,MAAMlB,IAAI,CAAC8B,MAAM,CAACF,KAAK,EAAEC,QAAQ,CAAC;IAC1D,IAAIX,KAAK,EAAE,MAAMA,KAAK;IACtB,OAAOE,IAAI;EACb,CAAC;EAED,MAAMW,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,MAAM;MAAEb;IAAM,CAAC,GAAG,MAAMlB,IAAI,CAAC+B,OAAO,CAAC,CAAC;IACtC,IAAIb,KAAK,EAAE,MAAMA,KAAK;EACxB,CAAC;EAED,MAAMc,aAAa,GAAG,MAAOJ,KAAK,IAAK;IACrC,MAAM;MAAER,IAAI;MAAEF;IAAM,CAAC,GAAG,MAAMlB,IAAI,CAACgC,aAAa,CAACJ,KAAK,CAAC;IACvD,IAAIV,KAAK,EAAE,MAAMA,KAAK;IACtB,OAAOE,IAAI;EACb,CAAC;EAED,MAAMa,cAAc,GAAG,MAAOJ,QAAQ,IAAK;IACzC,MAAM;MAAET,IAAI;MAAEF;IAAM,CAAC,GAAG,MAAMlB,IAAI,CAACiC,cAAc,CAACJ,QAAQ,CAAC;IAC3D,IAAIX,KAAK,EAAE,MAAMA,KAAK;IACtB,OAAOE,IAAI;EACb,CAAC;EAED,MAAMc,KAAK,GAAG;IACZvB,IAAI;IACJE,OAAO;IACPc,MAAM;IACNG,MAAM;IACNC,OAAO;IACPC,aAAa;IACbC;EACF,CAAC;EAED,oBACE/B,OAAA,CAACC,WAAW,CAACgC,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAzB,QAAA,EAChCA;EAAQ;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC7B,GAAA,CAxEWF,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}